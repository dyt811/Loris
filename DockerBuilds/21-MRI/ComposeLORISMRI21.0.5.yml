version: '3.7'
# This is the Docker-Compose orchestration of LORIS WITH MRI component pre-configured.
# Last updated: 2019-01-13 12:15
# Maintainer: Yang Ding (it@cnbp.ca)


services:

    # This is the database behind the LORIS 21 instance: note all data are stored in the dockerfile
    # DO NOT CHANGE THE service names as some of them are hard coded to dependent on each other.
    lorismridb:
         # Container name and label
        #container_name: LORIS_MySQLDB_${tag}


         #volumes:
         #    - //c/git/data:/var/lib/mysql
        build:
            context: ../..
            # Still using the same shared Dockerfile from the base LORIS image.
            dockerfile:  DockerBuilds/21/Dockerfile.LORIS${LORIS_version}.db
            # make sure these variadebugbles are properly named in the .env files: e.g .PlaceHolderRootPassword
            args:
                - ARGS_MYSQL_ROOT_PASSWORD=${MySQLRootPassword}
            # Environment not specified as the DockerFile is suppose to be standalone and workable too .
        image: neonatalbrainplatform/lorisdb:${LORIS_version}-MRI

        networks:
             - backend
        ports:
            - "${Ext_Port_MySQL}:3306"
        expose:
          - 3306
        #logging:
#            driver: "none"



    # This is the docker image of running images
    lorismri:
         # Container name and label
        #container_name: LORIS_${tag}

        build:
            context: ../..
            dockerfile: DockerBuilds/21-MRI/Dockerfile.LORISMRI${LORIS_version}.Ubuntu18
            args:
                - ARGS_ProjectName=${ProjectName}
                - ARGS_MySQLHost=${MySQLHost}
                - ARGS_MySQLUser=${MySQLUser}
                - ARGS_MySQLUserPassword=${MySQLUserPassword}
                - ARGS_MySQLDatabase=LORIS
                - ARGS_LorisMaintenanceEmail=${LorisMaintenanceEmail}
        image: neonatalbrainplatform/loris:${LORIS_version}-MRI

        networks:
            - backend
        depends_on:
            - lorismridb
        ports:
            - "${Ext_Port_HTTP}:80"
            - "${Ext_Port_HTTPS}:443"

     # This is the selenium image (i.e. worker node) that will run the actual work process which is executed to setup the bridge connection between the database and the front end user interaction
    chrome:
        image: selenium/node-chrome-debug:3.14.0-gallium
        volumes:
          - /dev/shm:/dev/shm
        depends_on:
          - hub
        environment:
          HUB_HOST: hub
        networks:
          - backend

    hub:
        image: selenium/hub:3.14.0-gallium
        ports:
          - "4444:4444"
        networks:
            - backend

    lorismridbsetup:
        #container_name: DC_LORIS21Configurator_${tag}
        build:
            context: ../..
            dockerfile: DockerBuilds/21-MRI/Dockerfile.LORISMRI${LORIS_version}.dbsetup
            args:
                - ARGS_MySQLHost=${MySQLHost}
                - ARGS_MySQLRoot=${MySQLRoot}
                - ARGS_MySQLRootPassword=${MySQLRootPassword}
                - ARGS_MySQLUser=${MySQLUser}
                - ARGS_MySQLUserPassword=${MySQLUserPassword}
                - ARGS_LorisFrontendUser=${LorisFrontendUser}
                - ARGS_LorisFrontendPassword=${LorisFrontendPassword}
                - ARGS_Ext_Port_HTTP=${Ext_Port_HTTP}
                - ARGS_LorisMaintenanceEmail=${LorisMaintenanceEmail}
                - ARGS_ProjectName=${ProjectName}
                - ARGS_MySQLDatabase=LORIS # the database created by default is called LORIS
            # Environment not specified as the DockerFile is suppose to be standalone and workable too .
        # Where to push eventually.
        image: neonatalbrainplatform/lorisdbsetup:${LORIS_version}-MRI

        stdin_open: true
        tty: true
        ports:
          - "5900-5999:5900"
        depends_on: # all these need to be up and running before running the Selenium integrator.
          - lorismri
          - lorismridb
          - hub
          - chrome
        networks:
            - backend

# Networks allow connection with EXTERNAL containers and PROJECTS
networks:
  backend:
    driver: "bridge"

# To run:
# docker-compose -f ComposeLORIS21.0.5.yml --force
