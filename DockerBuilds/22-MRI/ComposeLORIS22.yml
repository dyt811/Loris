version: '3.7'

services:

    # This is the database behind the LORIS 22 instance: note all data are stored in the dockerfile
    MySQL:
         # Container name and label
        #container_name: LORIS_MySQLDB_${tag}
        image: dyt811:DC_LORIS${LORIS_version}_MySQLDB_${tag}

         #volumes:
         #    - //c/git/data:/var/lib/mysql
        build:
            context: ../..
            dockerfile:  DockerBuilds/22/Dockerfile.LORIS${LORIS_version}.db
            # make sure these variables are properly named in the .env files: e.g .PlaceHolderRootPassword
            args:
                - ARGS_MYSQL_ROOT_PASSWORD=${MySQLRootPassword}
            # Environment not specified as the DockerFile is suppose to be standalone and workable too .
        networks:
             - backend
        ports:
            - "${Ext_Port_MySQL}:3306"

    # This is the docker image of running images
    LORIS:
         # Container name and label
        #container_name: LORIS_${tag}
        image: dyt811:DC_LORIS${LORIS_version}_${tag}
        build:
            context: ../..
            dockerfile: DockerBuilds/22/Dockerfile.LORIS${LORIS_version}.Ubuntu18
            args:
                - project_name=${ProjectName}
        networks:
            - backend
        depends_on:
            - MySQL
        ports:
            - "${Ext_Port_HTTP}:80"
            - "${Ext_Port_HTTPS}:443"

     # This is the selenium image (i.e. worker node) that will run the actual work process which is executed to setup the bridge connection between the database and the front end user interaction
    chrome:
        image: selenium/node-chrome-debug:3.14.0-gallium
        volumes:
          - /dev/shm:/dev/shm
        depends_on:
          - hub
        environment:
          HUB_HOST: hub
        networks:
              - backend

    hub:
        image: selenium/hub:3.14.0-gallium
        ports:
          - "4444:4444"
        networks:
            - backend

#
#    selenium-driver:
#        container_name: DC_LORIS22Configurator_${tag}
#        build:
#            context: ../
#            dockerfile: DockerBuilds/Dockerfile.LORIS${LORIS_version}.SeleniumPythonDBConfig
#            args:
#                - ARGS_MySQLHost=${MySQLHost}
#                - ARGS_MySQLRoot=${MySQLRoot}
#                - ARGS_MySQLRootPassword=${MySQLRootPassword}
#                - ARGS_MySQLUser=${MySQLUser}
#                - ARGS_MySQLUserPassword=${MySQLUserPassword}
#                - ARGS_LorisFrontendUser=${LorisFrontendUser}
#                - ARGS_LorisFrontendPassword=${LorisFrontendPassword}
#                - ARGS_Ext_Port_HTTP=${Ext_Port_HTTP}
#                - ARGS_LORIS22=LORIS22
#            # Environment not specified as the DockerFile is suppose to be standalone and workable too .
#        stdin_open: true
#        tty: true
#        ports:
#          - "5900-5999:5900"
#        depends_on: # all these need to be up and running before running the Selenium integrator.
#          - LORIS22
#          - MySQL22
#          - selenium-chrome
#        networks:
#            - backend

# Networks allow connection with EXTERNAL containers and PROJECTS
networks:
  backend:
    driver: "bridge"

# To run:
# docker-compose -f ComposeLORIS22.0.0.yml --force
